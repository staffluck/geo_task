[tool.poetry]
name = "geo-task"
version = "0.1.0"
description = ""
authors = ["Arseny Leontev <arseny.leontev@gmail.com>"]
readme = "README.md"
packages = [{include = "geo_task"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.89.0"
flake8-eradicate = "^1.4.0"
alembic = "^1.9.1"
uvicorn = "^0.20.0"
python-dotenv = "^0.21.0"
asyncpg = "^0.27.0"
python-jose = "^3.3.0"
passlib = "^1.7.4"
email-validator = "^1.3.0"
sqlalchemy = "^2.0.0"
sqlalchemy2-stubs = "^0.0.2a32"
geoalchemy2 = "^0.13.1"
python-json-logger = "^2.0.7"
bcrypt = "^4.0.1"

[tool.poetry.group.dev.dependencies]
mypy = "^0.991"
flake8 = "*"
black = "^22.12.0"
isort = "^5.11.4"
flake8-broken-line = "^0.6.0"
flake8-string-format = "^0.3.0"
pep8-naming = "^0.13.3"
flake8-bugbear = "^22.12.6"
flake8-comprehensions = "^3.10.1"
flake8-print = "^5.0.0"
flake8-annotations = "^2.9.1"
ruff = "^0.0.254"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
extend-select = ["B", "Q", "ANN", "E", "W", "C90", "N", "S", "BLE", "FBT", "A", "C4", "EM", "ISC", "ICN", "G", "PIE", "T20", "PT", "T20", "Q", "RSE", "RET", "SLF", "SIM", "ERA", "PL"]
ignore = ["ANN101", "ANN102", "B008", "S105", "A003", "S106"]
exclude = ["depends_stub.py", "src/infrastructure/data_access/postgresql/migrations/*", "monkey_patch_geo.py"]
line-length = 99

[tool.ruff.pep8-naming]
classmethod-decorators = ["pydantic.validator", "classmethod"]

[tool.black]
line_length = 99

[tool.isort]
line_length = 100123
profile="black"

[tool.mypy]
ignore_missing_imports=true
exclude=['src/infrastructure/data_access/postgresql/migrations']
